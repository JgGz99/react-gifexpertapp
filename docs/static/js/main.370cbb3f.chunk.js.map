{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","categoria","setCategoria","useState","anime","setAnime","onSubmit","e","preventDefault","trim","length","document","querySelector","reset","type","onChange","target","value","placeholder","getGif","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","i","ReactDOM","render","getElementById"],"mappings":"6MAyCeA,EArCK,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,UAAUC,EAAkB,EAAlBA,aAG5B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OACI,qCACI,6CACA,uBAAMC,SAhBC,SAACC,GAGZ,GAFAA,EAAEC,iBAECJ,EAAMK,OAAOC,OAAO,EAGnB,OAFAR,EAAa,CAACE,GAAF,mBAAWH,UACvBU,SAASC,cAAc,QAAQC,SAW/B,UACI,uBAAOC,KAAK,OAAOC,SArBb,SAACR,GACfF,EAASE,EAAES,OAAOC,QAoB8BC,YAAY,6BACpD,wBAAQJ,KAAM,SAAd,6B,+BC/BHK,EAAM,uCAAG,WAAOlB,GAAP,uBAAAmB,EAAA,4DACN,mCACNC,EAFY,iDAEoCC,UAAUrB,GAF9C,6BACN,oCADM,kBAMKsB,MAAMF,GANX,cAMRG,EANQ,gBAOSA,EAAKC,OAPd,uBAONC,EAPM,EAONA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAb3B,kBAgBPM,GAhBO,kCAkBdO,QAAQC,IAAR,MAlBc,0DAAH,sDCENC,EAAc,SAAC,GAAiB,IAAhBL,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QC+BDS,EAhCC,SAAC,GAAmB,IAAjBvC,EAAgB,EAAhBA,UAIf,ECNuB,SAACA,GACxB,MAA0BE,mBAAS,CAC/BuB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNzB,EAAOlB,GACF4C,MAAK,SAAAC,GAEEH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAI1B,CAACxC,IAEGyC,EDZ2BK,CAAY9C,GAAhC+B,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAKxC,IACJwC,EACG,sBAAKJ,UAAU,eAAf,UACA,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,wBACV,KACT,qBAAKA,UAAU,YAAf,SAEKL,EAAOJ,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEGlCkB,EA7BO,WAGtB,MAAkC7C,mBAAS,CAAC,gBAA5C,mBAAOF,EAAP,KAAkBC,EAAlB,KAMI,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaD,UAAWA,EACZC,aAAeA,IAE3B,6BAEID,EAAU2B,KAAI,SAAC3B,EAAUgD,GAAX,OACN,cAAC,EAAD,CAEAhD,UAAWA,GADNA,YClB7BiD,IAASC,OACL,cAAC,EAAD,IAEFxC,SAASyC,eAAe,W","file":"static/js/main.370cbb3f.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({categoria,setCategoria}) => {\r\n\r\n\r\n    const [anime, setAnime] = useState('');\r\n\r\n    const leerAnime = (e)=>{\r\n        setAnime(e.target.value)\r\n    }\r\n\r\n   const handleAdd=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(anime.trim().length>2){\r\n            setCategoria([anime,...categoria])\r\n            document.querySelector('form').reset();\r\n            return;\r\n        }\r\n\r\n       \r\n    }\r\n\r\n\r\n    return ( \r\n        <>\r\n            <h2>AddCategory</h2>\r\n            <form onSubmit={handleAdd}>\r\n                <input type=\"text\" onChange={leerAnime} placeholder=\"Inserta tu anime aqui!!!\"></input>\r\n                <button type =\"submit\"> Agregar</button>\r\n            </form>\r\n        </>\r\n     );\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategoria:PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGif = async (categoria) => {\r\n    const key = '9ufJ7yvIAYK02cSut3fhLro0vl5ZE8NS'\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=${key}`;\r\n\r\n    try {\r\n\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../Hooks/useFetchGifs'\r\n//import { getGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data: images, loading } = useFetchGif(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n            {loading ? \r\n                <div className=\"sk-cube-grid\">\r\n                <div className=\"sk-cube sk-cube1\"></div>\r\n                <div className=\"sk-cube sk-cube2\"></div>\r\n                <div className=\"sk-cube sk-cube3\"></div>\r\n                <div className=\"sk-cube sk-cube4\"></div>\r\n                <div className=\"sk-cube sk-cube5\"></div>\r\n                <div className=\"sk-cube sk-cube6\"></div>\r\n                <div className=\"sk-cube sk-cube7\"></div>\r\n                <div className=\"sk-cube sk-cube8\"></div>\r\n                <div className=\"sk-cube sk-cube9\"></div>\r\n            </div> : null}\r\n            <div className=\"card_grid\">\r\n\r\n                {images.map((img) => {\r\n                    return <GifGridItem key={img.id} {...img} />\r\n                })}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif(categoria)\r\n            .then(imgs => {\r\n                \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n               \r\n            });\r\n    }, [categoria])\r\n\r\n    return state\r\n}","import React,{useState} from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid'\r\n const GifExpertApp = () => {\r\n\r\n// const categorias = ['One Punch','Samurai X','Dragon Ball'];\r\nconst [categoria, setCategoria] = useState(['Dragon Ball']);\r\n\r\n// const handleAdd =()=>{\r\n//     setCategoria([...categoria,'anime']);\r\n// }\r\n\r\n    return ( \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr></hr>\r\n            <AddCategory categoria={categoria}\r\n                        setCategoria ={setCategoria}\r\n            />\r\n            <ol>\r\n             {\r\n                categoria.map((categoria,i) => \r\n                        <GifGrid\r\n                        key={categoria}\r\n                        categoria={categoria}/>\r\n                    )\r\n             }\r\n            </ol>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}